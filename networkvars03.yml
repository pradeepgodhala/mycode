---
- name: Network Agnostic Playbook 
  hosts: arista_switches
  gather_facts: no
  
  vars:
          dnsserver: "8.8.8.8"

  vars_files:
          - vault.yml  # hide this with ansible-vault if you like
  
  tasks: 
          - name: Take backup of the switches
            arista.eos.eos_config:
                    backup: yes
                    backup_options:
                            # filename: "{{ ansible_host }}_config"
                            dir_path: /home/student/mycode/Arista_Config/

          - name: CONFIGURE DNS 
            cli_config:
                    config: ip name-server {{ dnsserver }}

          - name: CHECK CONFIGURATION
            cli_command:
                    command: show run | i ip name-server
            register: show_output

          - name: PRINT OUTPUT TO SCREEN
            debug:
                    var: show_output.stdout
                    verbosity: 1
    # Let's create a new variable based on some dynamic data.
    # If our command worked, we know it should respond ip name-server vrf default www.xxx.yy.zzz
    #     # Where www.xxx.yyy.zzz should be the IP address passed to our playbook for dnsserver
          - set_fact:
                  expected_output: "ip name-server vrf default {{ dnsserver }}"
    
    # now perform our post-check. We want the playbook to FAIL if we didn't get our expected output
          - fail:
                  msg: failing
            when: expected_output not in show_output.stdout
